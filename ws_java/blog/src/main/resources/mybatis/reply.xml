<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace = "dev.mvc.reply.ReplyDAOInter">
  <insert id="create">
    INSERT INTO reply(replyno, contentsno, userno, content, passwd, rdate)
    VALUES(reply_seq.nextval,
                 #{contentsno}, #{userno}, #{content}, #{passwd}, sysdate)
  </insert>
  
  <select id="list" resultType="dev.mvc.reply.ReplyVO">
    SELECT replyno, contentsno, userno, content, passwd, rdate
    FROM reply
    ORDER BY replyno DESC
  </select>

  <select id="list_user_join" resultType="dev.mvc.reply.ReplyUserVO">
    SELECT m.useremail,
              r.replyno, r.contentsno, r.userno, r.content, r.passwd, r.rdate
    FROM bloguser m,  reply r
    WHERE m.userno = r.userno
    ORDER BY r.replyno DESC
  </select>
  
  <select id="list_by_contentsno" resultType="dev.mvc.reply.ReplyVO" parameterType="int">
    SELECT replyno, contentsno, userno, content, passwd, rdate
    FROM reply
    WHERE contentsno=#{contentsno}
    ORDER BY replyno DESC
  </select>

  <!-- 특정글에 대한 전체 댓글 목록 -->
  <select id="list_by_contentsno_join" resultType="dev.mvc.reply.ReplyUserVO" parameterType="int">
    SELECT m.useremail,
              r.replyno, r.contentsno, r.userno, r.content, r.passwd, r.rdate
    FROM bloguser m,  reply r
    WHERE (m.userno = r.userno) AND r.contentsno=#{contentsno}
    ORDER BY r.replyno DESC
  </select>
  
  <!-- <select id="checkPasswd" parameterType="HashMap" resultType="int"> -->
  <!-- <select id="checkPasswd" parameterType="ReplyVO" resultType="int"> -->
  <select id="checkPasswd" parameterType="Map" resultType="int">
    SELECT COUNT(*) as cnt
    FROM reply
    WHERE replyno = #{replyno} AND passwd=#{passwd}
  </select>
  
  <delete id="delete" parameterType="int">
    DELETE FROM reply
    WHERE replyno = #{replyno}
  </delete>

  <!-- 더보기 버튼 페이징 구현 -->
  <select id="list_by_contentsno_join_add" resultType="dev.mvc.reply.ReplyUserVO"
             parameterType="HashMap">
    SELECT useremail, replyno, contentsno, userno, content, passwd, rdate, r
    FROM (
            SELECT useremail, replyno, contentsno, userno, content, passwd, rdate, rownum as r
            FROM (
                    SELECT m.useremail,
                               r.replyno, r.contentsno, r.userno, r.content, r.passwd, r.rdate
                    FROM bloguser m,  reply r
                    WHERE (m.userno = r.userno) AND r.contentsno = #{contentsno}
                    ORDER BY r.replyno DESC
            )
    )
    WHERE <![CDATA[ r >= #{startNum} AND r <= #{endNum}]]>
  </select>
        
</mapper> 

